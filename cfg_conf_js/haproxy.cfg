# CFG LOADBALANCER LUNATIC PROJECT - Versi Modular

global
    log stdout format raw local0
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s

    pidfile /run/haproxy.pid
    chroot /var/lib/haproxy

    tune.ssl.default-dh-param 2048
    tune.h2.initial-window-size 2147483647

    user haproxy
    group haproxy
    daemon

    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305
    ssl-default-bind-ciphersuites TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11

defaults
    log global
    mode tcp
    option tcplog
    timeout connect 500ms
    timeout client  5m
    timeout server  5m

# ======== FRONTEND CONFIGURATION ========

frontend lb_frontend
    mode tcp
    bind-process 1-2
    bind *:80, *:443 ssl crt /etc/haproxy/hap.pem alpn h2,http/1.1 tfo
    bind *:8000-8100 tfo
    tcp-request inspect-delay 500ms
    tcp-request content accept if { req.ssl_hello_type 1 }

    # ACLs
    acl is_http req.ssl_sni -m end .http
    acl is_ws hdr(Upgrade) -i websocket
    acl is_payload payload(0,7) -m bin 5353482d322e30
    acl is_h2 ssl_fc_alpn -i h2

    # Backend Routing
    use_backend backend_http if is_http
    use_backend backend_ws if is_ws
    use_backend backend_h2 if is_h2
    use_backend backend_payload if is_payload
    default_backend backend_default

# ======== BACKEND CONFIGURATION ========

backend backend_http
    mode http
    balance roundrobin
    server web01 127.0.0.1:8081 check
    server web02 127.0.0.1:8082 check

backend backend_ws
    mode tcp
    balance leastconn
    server ws01 127.0.0.1:9001 check
    server ws02 127.0.0.1:9002 check

backend backend_h2
    mode tcp
    server h2_01 127.0.0.1:8443 check send-proxy-v2

backend backend_payload
    mode tcp
    server payload01 127.0.0.1:7000 check

backend backend_default
    mode tcp
    balance roundrobin
    server default01 127.0.0.1:10000 check
    server default02 127.0.0.1:10001 check
